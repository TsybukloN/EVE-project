macro(add_eve_ececutable)
  set(options EVE3 EVE2)
  set(oneValueArgs NAME)
  set(multiValueArgs SRC SCREENSIZES)
  cmake_parse_arguments(eve_executable "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
  if ("EVE3" IN_LIST EVE_EXAMPLES_PLATFORMS)
    set(BUILD_EVE3 On)
  endif()
  if ("EVE4" IN_LIST EVE_EXAMPLES_PLATFORMS)
    set(BUILD_EVE3 On)
  endif()
  foreach(platform ${EVE_EXAMPLES_PLATFORMS})
    foreach(display ${${platform}_EXAMPLES_DISPLAY_SIZES})
        foreach(touch ${EVE_EXAMPLES_TOUCH})
          set(must_generate On)
          if(eve_executable_EVE3 AND BUILD_EVE3 AND NOT (${platform} STREQUAL "EVE3" OR ${platform} STREQUAL "EVE4"))
                set(must_generate Off)
          endif()
          if(must_generate)
            set(final_name "${eve_executable_NAME}_${display}_${platform}_${touch}")
            add_executable(${final_name} ${eve_executable_SRC})
            target_compile_definitions(${final_name} PUBLIC DEMO_DISPLAY=DISPLAY_${display} DEMO_BOARD=BOARD_${platform} DEMO_TOUCH=TOUCH_${touch})
            target_link_libraries(${final_name} eve)
            if(WIN32)
              target_link_libraries(${final_name} kernel32)
            endif()
            set_target_properties(${final_name} PROPERTIES FOLDER ${platform}/${display}/${touch})
            install(TARGETS ${final_name} DESTINATION ./${platform}/${display}/${touch})
          endif()
        endforeach()
    endforeach()
  endforeach()
endmacro()


